server:
  port: 0
  servlet:
    context-path: /user-service
eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      default-zone: http://localhost:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${random.uuid}
spring:
  datasource:
    driverClassName: org.h2.Driver
  h2:
    console:
      enabled: true
      path: /h2
      settings:
        web-allow-others: true
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
    show-sql: true
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  kafka:
    bootstrap-server: localhost:9092
    template-default-topic: CreatedUSer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
        json:
          type:
            mapping: event:com.mcorvera.userservice.infraestructure.dtos.events.EventBase
          add:
            type:
              headers: false
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9090/realms/mycompany-microservice
app:
  regexEmail: ^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$
  regexPassword: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{4,12}$
  testProp: Property Test Updated 2
jwt:
  expiration: 18000
management:
  endpoints:
    web:
      exposure:
        include: "*"

logging:
  level:
    org:
      springframework:
        security: DEBUG